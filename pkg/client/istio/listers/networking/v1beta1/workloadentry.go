/*
Copyright 2023 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	networkingv1beta1 "istio.io/client-go/pkg/apis/networking/v1beta1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// WorkloadEntryLister helps list WorkloadEntries.
// All objects returned here must be treated as read-only.
type WorkloadEntryLister interface {
	// List lists all WorkloadEntries in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*networkingv1beta1.WorkloadEntry, err error)
	// WorkloadEntries returns an object that can list and get WorkloadEntries.
	WorkloadEntries(namespace string) WorkloadEntryNamespaceLister
	WorkloadEntryListerExpansion
}

// workloadEntryLister implements the WorkloadEntryLister interface.
type workloadEntryLister struct {
	listers.ResourceIndexer[*networkingv1beta1.WorkloadEntry]
}

// NewWorkloadEntryLister returns a new WorkloadEntryLister.
func NewWorkloadEntryLister(indexer cache.Indexer) WorkloadEntryLister {
	return &workloadEntryLister{listers.New[*networkingv1beta1.WorkloadEntry](indexer, networkingv1beta1.Resource("workloadentry"))}
}

// WorkloadEntries returns an object that can list and get WorkloadEntries.
func (s *workloadEntryLister) WorkloadEntries(namespace string) WorkloadEntryNamespaceLister {
	return workloadEntryNamespaceLister{listers.NewNamespaced[*networkingv1beta1.WorkloadEntry](s.ResourceIndexer, namespace)}
}

// WorkloadEntryNamespaceLister helps list and get WorkloadEntries.
// All objects returned here must be treated as read-only.
type WorkloadEntryNamespaceLister interface {
	// List lists all WorkloadEntries in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*networkingv1beta1.WorkloadEntry, err error)
	// Get retrieves the WorkloadEntry from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*networkingv1beta1.WorkloadEntry, error)
	WorkloadEntryNamespaceListerExpansion
}

// workloadEntryNamespaceLister implements the WorkloadEntryNamespaceLister
// interface.
type workloadEntryNamespaceLister struct {
	listers.ResourceIndexer[*networkingv1beta1.WorkloadEntry]
}
